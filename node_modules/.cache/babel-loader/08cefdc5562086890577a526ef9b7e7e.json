{"ast":null,"code":"import _objectSpread from \"/Users/jacobbryant/Desktop/udemyReact/burger-builder/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/jacobbryant/Desktop/udemyReact/burger-builder/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jacobbryant/Desktop/udemyReact/burger-builder/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jacobbryant/Desktop/udemyReact/burger-builder/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jacobbryant/Desktop/udemyReact/burger-builder/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jacobbryant/Desktop/udemyReact/burger-builder/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jacobbryant/Desktop/udemyReact/burger-builder/src/containers/BurgerBuilder/BurgerBuilder.js\";\nimport React, { Component } from \"react\";\nimport Aux from '../../hoc/Aux/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport axios from '../../axios-orders';\nvar INGREDIENT_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.3,\n  bacon: 0.7\n};\n\nvar BurgerBuilder =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(BurgerBuilder, _Component);\n\n  function BurgerBuilder() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, BurgerBuilder);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(BurgerBuilder)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      ingredients: null,\n      totalPrice: 4,\n      purchasable: false,\n      purchasing: false,\n      loading: false\n    };\n\n    _this.addIngredientHandler = function (type) {\n      var oldCount = _this.state.ingredients[type];\n      var updatedCount = oldCount + 1;\n\n      var updatedIngredients = _objectSpread({}, _this.state.ingredients);\n\n      updatedIngredients[type] = updatedCount;\n      var priceAddition = INGREDIENT_PRICES[type];\n      var oldPrice = _this.state.totalPrice;\n      var newPrice = oldPrice + priceAddition;\n\n      _this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n\n      _this.updatePurchaseState(updatedIngredients);\n    };\n\n    _this.removeIngredientHandler = function (type) {\n      var oldCount = _this.state.ingredients[type];\n\n      if (oldCount <= 0) {\n        return;\n      }\n\n      var updatedCount = oldCount - 1;\n\n      var updatedIngredients = _objectSpread({}, _this.state.ingredients);\n\n      updatedIngredients[type] = updatedCount;\n      var priceDeduction = INGREDIENT_PRICES[type];\n      var oldPrice = _this.state.totalPrice;\n      var newPrice = oldPrice - priceDeduction;\n\n      _this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n\n      _this.updatePurchaseState(updatedIngredients);\n    };\n\n    _this.purchaseHandler = function () {\n      _this.setState({\n        purchasing: true\n      });\n    };\n\n    _this.purchaseCancelHandler = function () {\n      _this.setState({\n        purchasing: false\n      });\n    };\n\n    _this.purchaseContinueHandler = function () {\n      //alert(\"DOIT\");\n      // this.setState({loading: true})\n      // const order = {\n      //     ingredients: this.state.ingredients,\n      //     price: this.state.totalPrice,\n      //     customer: {\n      //         name: 'Randy Man',\n      //         address: {\n      //             street: \"Main Street\",\n      //             zipCode: '46250',\n      //             country: 'US'\n      //         },\n      //         email: 'test@test.com'\n      //     },\n      //     deliveryMethod: 'fastest'\n      // }\n      // axios.post('/orders.json', order)\n      //     .then(response => {\n      //         this.setState({ loading: false, purchasing: false })\n      //     })\n      //     .catch(error => {\n      //         this.setState({ loading: false, purchasing: false })\n      //     })\n      var queryParams = [];\n\n      for (var i in _this.state.ingredients) {\n        queryParams.push(encodeURIComponent(i) + '=' + encodeURIComponent(_this.state.ingredients[i]));\n      }\n\n      var queryString = queryParams.join('&');\n\n      _this.props.history.push({\n        pathname: '/checkout',\n        search: '?' + queryString\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(BurgerBuilder, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      axios.get('https://react-my-burger-6fc25.firebaseio.com/ingredients.json').then(function (response) {\n        _this2.setState({\n          ingredients: response.data\n        });\n      });\n    }\n  }, {\n    key: \"updatePurchaseState\",\n    value: function updatePurchaseState(ingredients) {\n      var sum = Object.keys(ingredients).map(function (igKey) {\n        return ingredients[igKey];\n      }).reduce(function (sum, el) {\n        return sum + el;\n      }, 0);\n      this.setState({\n        purchasable: sum > 0\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var disabledInfo = _objectSpread({}, this.state.ingredients);\n\n      for (var key in disabledInfo) {\n        disabledInfo[key] = disabledInfo[key] <= 0;\n      }\n\n      var orderSummary = null;\n      var burger = React.createElement(Spinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      });\n\n      if (this.state.ingredients) {\n        burger = React.createElement(Aux, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141\n          },\n          __self: this\n        }, React.createElement(Burger, {\n          ingredients: this.state.ingredients,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142\n          },\n          __self: this\n        }), React.createElement(BuildControls, {\n          ingredientAdded: this.addIngredientHandler,\n          ingredientRemoved: this.removeIngredientHandler,\n          disabled: disabledInfo,\n          price: this.state.totalPrice,\n          purchasable: this.state.purchasable,\n          ordered: this.purchaseHandler,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143\n          },\n          __self: this\n        }));\n        orderSummary = React.createElement(OrderSummary, {\n          ingredients: this.state.ingredients,\n          purchaseCancelled: this.purchaseCancelHandler,\n          purchaseContinue: this.purchaseContinueHandler,\n          price: this.state.totalPrice,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152\n          },\n          __self: this\n        });\n      }\n\n      if (this.state.loading) {\n        orderSummary = React.createElement(Spinner, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(Aux, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(Modal, {\n        show: this.state.purchasing,\n        modalClosed: this.purchaseCancelHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, orderSummary), burger);\n    }\n  }]);\n\n  return BurgerBuilder;\n}(Component);\n\nexport default withErrorHandler(BurgerBuilder, axios);","map":{"version":3,"sources":["/Users/jacobbryant/Desktop/udemyReact/burger-builder/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","Aux","Burger","BuildControls","Modal","OrderSummary","Spinner","withErrorHandler","axios","INGREDIENT_PRICES","salad","cheese","meat","bacon","BurgerBuilder","state","ingredients","totalPrice","purchasable","purchasing","loading","addIngredientHandler","type","oldCount","updatedCount","updatedIngredients","priceAddition","oldPrice","newPrice","setState","updatePurchaseState","removeIngredientHandler","priceDeduction","purchaseHandler","purchaseCancelHandler","purchaseContinueHandler","queryParams","i","push","encodeURIComponent","queryString","join","props","history","pathname","search","get","then","response","data","sum","Object","keys","map","igKey","reduce","el","disabledInfo","key","orderSummary","burger"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport Aux from '../../hoc/Aux/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport axios from '../../axios-orders';\n\nconst INGREDIENT_PRICES = {\n    salad: 0.5,\n    cheese: 0.4,\n    meat: 1.3,\n    bacon: 0.7\n}\n\nclass BurgerBuilder extends Component {\n\n    state = {\n        ingredients: null,\n        totalPrice: 4,\n        purchasable: false,\n        purchasing: false,\n        loading: false\n    }\n\n    componentDidMount() {\n        \n        axios.get('https://react-my-burger-6fc25.firebaseio.com/ingredients.json')\n            .then(response => {\n                this.setState({ingredients: response.data})\n            })\n    }\n\n    updatePurchaseState(ingredients) {\n    \n        const sum = Object.keys(ingredients)\n            .map(igKey => {\n                return ingredients[igKey]\n            })\n            .reduce((sum, el) => {\n                return sum + el;\n            }, 0)\n        this.setState({purchasable: sum > 0})\n    }\n\n    addIngredientHandler = (type) => {\n        const oldCount = this.state.ingredients[type];\n        const updatedCount = oldCount + 1;\n        const updatedIngredients = {\n            ...this.state.ingredients\n        }\n        updatedIngredients[type] = updatedCount;\n        const priceAddition = INGREDIENT_PRICES[type];\n        const oldPrice = this.state.totalPrice;\n        const newPrice = oldPrice + priceAddition;\n        this.setState({totalPrice: newPrice, ingredients: updatedIngredients});\n\n        this.updatePurchaseState(updatedIngredients);\n    } \n\n    removeIngredientHandler = (type) => {\n        const oldCount = this.state.ingredients[type];\n\n        if(oldCount <= 0) {\n            return;\n        }\n\n        const updatedCount = oldCount - 1;\n        const updatedIngredients = {\n            ...this.state.ingredients\n        }\n        updatedIngredients[type] = updatedCount;\n        const priceDeduction = INGREDIENT_PRICES[type];\n        const oldPrice = this.state.totalPrice;\n        const newPrice = oldPrice - priceDeduction;\n        this.setState({ totalPrice: newPrice, ingredients: updatedIngredients });\n\n        this.updatePurchaseState(updatedIngredients);\n    } \n\n    purchaseHandler = () => {\n        this.setState({purchasing: true});\n    }\n\n    purchaseCancelHandler = () => {\n        this.setState({purchasing: false});\n    }\n\n    purchaseContinueHandler = () => {\n        //alert(\"DOIT\");\n        // this.setState({loading: true})\n        // const order = {\n        //     ingredients: this.state.ingredients,\n        //     price: this.state.totalPrice,\n        //     customer: {\n        //         name: 'Randy Man',\n        //         address: {\n        //             street: \"Main Street\",\n        //             zipCode: '46250',\n        //             country: 'US'\n        //         },\n        //         email: 'test@test.com'\n        //     },\n        //     deliveryMethod: 'fastest'\n        // }\n        // axios.post('/orders.json', order)\n        //     .then(response => {\n        //         this.setState({ loading: false, purchasing: false })\n        //     })\n        //     .catch(error => {\n        //         this.setState({ loading: false, purchasing: false })\n        //     })\n        const queryParams = [];\n        for (let i in this.state.ingredients) {\n            queryParams.push(encodeURIComponent(i) + '=' + encodeURIComponent(this.state.ingredients[i]))\n        }\n        const queryString = queryParams.join('&');\n        this.props.history.push({\n            pathname: '/checkout',\n            search: '?' + queryString\n        });\n    }\n\n    render() {\n        const disabledInfo = {\n            ...this.state.ingredients\n        };\n\n        for ( let key in disabledInfo) {\n            disabledInfo[key] = disabledInfo[key] <= 0\n        }\n        let orderSummary = null;\n        \n        let burger = <Spinner />;\n\n        if(this.state.ingredients) {\n            burger = (\n                <Aux>\n                    <Burger ingredients={this.state.ingredients} />\n                    <BuildControls\n                        ingredientAdded={this.addIngredientHandler}\n                        ingredientRemoved={this.removeIngredientHandler}\n                        disabled={disabledInfo}\n                        price={this.state.totalPrice}\n                        purchasable={this.state.purchasable}\n                        ordered={this.purchaseHandler} />\n                </Aux>\n            );\n            orderSummary = <OrderSummary\n                ingredients={this.state.ingredients}\n                purchaseCancelled={this.purchaseCancelHandler}\n                purchaseContinue={this.purchaseContinueHandler}\n                price={this.state.totalPrice} />;\n        } \n\n        if (this.state.loading) {\n            orderSummary = <Spinner />;\n        }\n\n        return (\n            <Aux>\n                <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\n                    {orderSummary}\n                </Modal>    \n                {burger}\n            </Aux>\n        );\n    }\n}\n\nexport default withErrorHandler(BurgerBuilder, axios);"]},"metadata":{},"sourceType":"module"}