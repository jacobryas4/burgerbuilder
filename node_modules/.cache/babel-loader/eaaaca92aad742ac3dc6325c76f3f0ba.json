{"ast":null,"code":"var _jsxFileName = \"/Users/jacobbryant/Desktop/udemyReact/burger-builder/src/components/Order/Order.js\";\nimport React from 'react';\nimport classes from './Order.css';\n\nvar order = function order(props) {\n  var ingredients = [];\n\n  for (var ingredientName in props.ingredients) {\n    ingredients.push({\n      name: ingredientName,\n      amount: props.ingredients[ingredientName]\n    });\n  }\n\n  var ingredientOutput = ingredients.map(function (ig) {\n    return React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, ig.name, \" (\", ig.amount, \")\");\n  });\n  return React.createElement(\"div\", {\n    className: classes.Order,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Ingredients: ingredientOutput\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"Price: \", React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"USD \", Number.parseFloat(props.price).toFixed(2))));\n};\n\nexport default order;","map":{"version":3,"sources":["/Users/jacobbryant/Desktop/udemyReact/burger-builder/src/components/Order/Order.js"],"names":["React","classes","order","props","ingredients","ingredientName","push","name","amount","ingredientOutput","map","ig","Order","Number","parseFloat","price","toFixed"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,OAAP,MAAoB,aAApB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD,EAAW;AAErB,MAAMC,WAAW,GAAG,EAApB;;AAEA,OAAK,IAAIC,cAAT,IAA2BF,KAAK,CAACC,WAAjC,EAA8C;AAC1CA,IAAAA,WAAW,CAACE,IAAZ,CAAiB;AACbC,MAAAA,IAAI,EAAEF,cADO;AAEbG,MAAAA,MAAM,EAAEL,KAAK,CAACC,WAAN,CAAkBC,cAAlB;AAFK,KAAjB;AAIH;;AAED,MAAMI,gBAAgB,GAAGL,WAAW,CAACM,GAAZ,CAAgB,UAAAC,EAAE,EAAI;AAC3C,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOA,EAAE,CAACJ,IAAV,QAAkBI,EAAE,CAACH,MAArB,MAAP;AACH,GAFwB,CAAzB;AAIA,SAEI;AAAK,IAAA,SAAS,EAAEP,OAAO,CAACW,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAaC,MAAM,CAACC,UAAP,CAAkBX,KAAK,CAACY,KAAxB,EAA+BC,OAA/B,CAAuC,CAAvC,CAAb,CAAV,CAFJ,CAFJ;AASH,CAxBD;;AA0BA,eAAed,KAAf","sourcesContent":["import React from 'react';\n\nimport classes from './Order.css';\n\nconst order = (props) => {\n\n    const ingredients = [];\n\n    for (let ingredientName in props.ingredients) {\n        ingredients.push({\n            name: ingredientName, \n            amount: props.ingredients[ingredientName]\n        });\n    }\n\n    const ingredientOutput = ingredients.map(ig => {\n        return <span>{ig.name} ({ig.amount})</span>;\n    })\n\n    return(\n\n        <div className={classes.Order}>\n            <p>Ingredients: ingredientOutput</p>\n            <p>Price: <strong>USD {Number.parseFloat(props.price).toFixed(2)}</strong></p>\n        </div>\n\n    );\n\n}\n\nexport default order;"]},"metadata":{},"sourceType":"module"}